sort Node
sort Id

relation elected in Node
relation succ in Node * Node
relation toSend in Node * Id
relation id in Node * Id
relation inf in Id * Id
//relation btw in Node * Node * Node

constant imax in Id
constant lmax in Id

paths[succ, succ_tc, btw]

axiom ring {
	G {(all x,y,z : Node | (succ(x,y) && succ(x,z)) => y=z)
	(all x,y : Node | succ_tc'(x,y))}
}


axiom init  { 
	all x:Node , i:Id | ! toSend(x,i) 
	&& all x : Node | ! elected(x)
} 

event send [sender: Node, receiver: Node, transferred: Id] 
modifies toSend at {(x,i), (xs,i)}, elected at {xs} { 
	 elected'(receiver) <=> (toSend'(receiver,transferred) && id(receiver,transferred))
}

check prop { G(all x:Node | elected(x) => G (all y : Node | elected(y) => x=y)) } 
using frame [
	send, 
		{{all x:Node | x != receiver => ! elected(x)} 
			&& {all x,y:Node,i:Id | ! id(y,i) || (x=receiver && i=transferred) 
						|| (x=sender && i=transferred) || ! toSend(x,i) || btw(x,lmax,y)
			}
		}
]

check prop2 { F (some y: Node | elected(y)) } 
assuming {all x,x2 : Node, i:Id | G F (succ(x,xs) && (id(x,i) || toSend(x,i))) => G F send(x,xs,i)} 
using trans[prop, {toSend(imax, x)}]


